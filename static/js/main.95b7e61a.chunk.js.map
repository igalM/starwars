{"version":3,"sources":["pages/movies-page/components/MovieItem/MovieItem.tsx","store/reducers/selectors.ts","shared/UI/Spinner/Spinner.tsx","utils/util.ts","store/actions/actionTypes.ts","store/actions/movies.ts","pages/movies-page/MoviesList.tsx","assets/images/logo.svg","shared/UI/Toolbar/Toolbar.tsx","App.tsx","store/reducers/movies.ts","store/reducers/index.ts","api/movies.ts","utils/axios.ts","store/sagas/movies.ts","store/sagas/index.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","props","position","margin","flexDirection","boxShadow","isFavorite","transition","height","expanded","transform","breakpoints","down","minHeight","openingCrawl","padding","expand","marginLeft","transitions","create","duration","shortest","expandOpen","actions","right","bottom","icon","MovieItem","title","episode_id","opening_crawl","release_date","characters","planets","vehicles","species","starships","toggle","classes","Grid","item","lg","md","Card","className","CardHeader","subheader","moment","format","CardContent","Typography","variant","color","component","CardActions","Tooltip","IconButton","onClick","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","length","selectMoviesState","state","moviesReducer","movies","selectLoadingState","loading","selectErrorState","error","left","top","Spinner","CircularProgress","size","updateObject","oldState","updatedProperties","typedAction","type","payload","TOGGLE_FAV_MOVIE","TOGGLE_FAV_MOVIE_START","FETCH_MOVIES_START","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILED","FETCH_MOVIES","fetchMoviesSuccess","favoritesIds","actionTypes","flexGrow","display","flexWrap","MoviesList","useState","movieToExpand","setMovieToExpand","useSelector","dispatch","useDispatch","handleToggleFav","useCallback","id","MoviesActions","toString","moviesList","Object","keys","map","key","handleExpandClick","container","textAlign","paddingBottom","toolbar","logo","maxWidth","fontSize","CustomToolbar","AppBar","Toolbar","src","Logo","alt","App","useEffect","initialState","fetchMoviesSuccessHelper","fetchMoviesStartHelper","fetchMoviesFailedHelper","toggleFavMovieHelper","updatedMovie","updatedMovies","action","rootReducer","combineReducers","moviesApi","this","get","response","transformResponse","data","results","transformedMovies","api","apiConfig","baseURL","process","headers","common","Accept","axios","url","config","updateFavMoviesIdsSaga","getMoviesSaga","call","localStorage","ids","updatedIds","JSON","parse","stringify","put","delay","getMovies","sagas","takeEvery","rootSaga","all","MoviesSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"gVAyBMA,EAAYC,aAA8B,SAACC,GAAD,OAC5CC,YAAa,CACTC,KAAM,SAAAC,GAAK,gBACPC,SAAU,WACVC,OAAQ,GACRC,cAAe,SACfC,UAAWJ,EAAMK,WAdH,0BACF,uGAcZC,WAAY,WACZC,OAAQP,EAAMQ,SAAW,IAAM,IAC/B,UAAW,CACPC,UAAW,gBARR,cAUNZ,EAAMa,YAAYC,KAAK,MAAQ,CAC5BJ,OAAQ,OACRK,UAAW,MAZR,cAcNf,EAAMa,YAAYC,KAAK,MAAQ,CAC5BT,OAAQ,GACRU,UAAW,MAhBR,GAmBXC,aAAc,CACVC,QAAS,UAEbC,OAAQ,CACJN,UAAW,eACXO,WAAY,OACZV,WAAYT,EAAMoB,YAAYC,OAAO,YAAa,CAC9CC,SAAUtB,EAAMoB,YAAYE,SAASC,YAG7CC,WAAY,CACRZ,UAAW,kBAEfa,QAAS,CACLrB,SAAU,WACVsB,MAAO,EACPC,OAAQ,GAEZC,KAAM,CACFT,WAAY,aAkFTU,EAvEoB,SAAC,GAalB,IAZdC,EAYa,EAZbA,MACAC,EAWa,EAXbA,WACAC,EAUa,EAVbA,cACAC,EASa,EATbA,aACAzB,EAQa,EARbA,WACAG,EAOa,EAPbA,SACAuB,EAMa,EANbA,WACAC,EAKa,EALbA,QACAC,EAIa,EAJbA,SACAC,EAGa,EAHbA,QACAC,EAEa,EAFbA,UACApB,EACa,EADbA,OACAqB,EAAa,EAAbA,OAEMC,EAAU1C,EAAU,CAAEU,aAAYG,aAExC,OACI,cAAC8B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACI,eAACC,EAAA,EAAD,CAAMC,UAAWN,EAAQtC,KAAzB,UACI,cAAC6C,EAAA,EAAD,CACIjB,MAAOA,EACPkB,UAAWC,IAAOhB,GAAciB,OAAO,QAE3C,cAACC,EAAA,EAAD,CAAaL,UAAWN,EAAQxB,aAAhC,SACI,cAACoC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACKvB,MAGT,eAACwB,EAAA,EAAD,CAAaV,UAAWN,EAAQf,QAAhC,UACI,cAACgC,EAAA,EAAD,CAAS3B,MAAOtB,EAAa,wBAA0B,mBAAvD,SACI,cAACkD,EAAA,EAAD,CAAYC,QAAS,kBAAMpB,EAAOR,IAAae,UAAWN,EAAQZ,KAAlE,SACI,cAAC,IAAD,CAAc0B,MAAO9C,EAAa,YAAc,iBAGxD,cAACiD,EAAA,EAAD,CAAS3B,MAAOnB,EAAW,YAAc,YAAzC,SACI,cAAC+C,EAAA,EAAD,CACIZ,UAAWc,YAAKpB,EAAQtB,OAAT,eACVsB,EAAQhB,WAAab,IAE1BgD,QAAS,kBAAMzC,EAAOa,IACtB8B,gBAAelD,EALnB,SAMI,cAAC,IAAD,WAIZ,cAACmD,EAAA,EAAD,CAAUC,GAAIpD,EAAUqD,QAAQ,OAAOC,eAAa,EAApD,SACI,eAACd,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYc,WAAS,EAArB,SAAsB,yCACtB,eAACd,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,mCAC2BrB,EAAWiC,UAEtC,eAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,gCACwBpB,EAAQgC,UAEhC,eAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,gCACwBlB,EAAQ8B,UAEhC,eAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,iCACyBnB,EAAS+B,UAElC,eAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,kCAC0BjB,EAAU6B,qBCxI/CC,EAAoB,SAACC,GAAD,OAAsBA,EAAMC,cAAcC,QAC9DC,EAAqB,SAACH,GAAD,OAAsBA,EAAMC,cAAcG,SAC/DC,EAAmB,SAACL,GAAD,OAAsBA,EAAMC,cAAcK,O,SCApE7E,EAAYC,aAAW,kBACzBE,YAAa,CACTC,KAAM,CACFE,SAAU,WACVwE,KAAM,MACNC,IAAK,MACLjE,UAAW,8BAYRkE,EALW,WACtB,IAAMtC,EAAU1C,IAChB,OAAO,qBAAKgD,UAAWN,EAAQtC,KAAxB,SAA8B,cAAC6E,EAAA,EAAD,CAAkBC,KAAM,QCnB1D,SAASC,EAAmBC,EAAaC,GAC5C,OAAO,2BAAKD,GAAaC,GAUtB,SAASC,EAAYC,EAAcC,GACtC,MAAO,CAAED,OAAMC,WCZZ,IAAMC,EAAmB,mBACnBC,EAAyB,yBACzBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAe,eCWfC,EAAqB,SAACtB,EAAmBuB,GAClD,OAAOV,EAAYW,EAAkC,CAAExB,SAAQuB,kBCN7DhG,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAK,aACD8F,SAAU,EACVC,QAAS,OACTC,SAAU,OACVjF,QAAS,IACRjB,EAAMa,YAAYC,KAAK,MAAQ,CAC5BG,QAAS,UAwCVkF,EAlCI,WAAO,IAAD,EACqBC,mBAAwB,MAD7C,mBACdC,EADc,KACCC,EADD,KAEf/B,EAASgC,YAAYnC,GACrBK,EAAU8B,YAAY/B,GACtBG,EAAQ4B,YAAY7B,GAEpBlC,EAAU1C,IAEV0G,EAAWC,cAEXC,EAAkBC,uBAAY,SAACC,GAAD,OAAgBJ,ED3B1B,SAACI,GAC3B,OAAOxB,EAAYW,EAAoCa,GC0BMC,CAA6BD,EAAGE,eAAc,CAACN,IAM5G,GAAI/B,EAAS,OAAO,cAAC,EAAD,IACpB,GAAIE,EAAO,OAAO,sFAElB,IAAMoC,EAAaC,OAAOC,KAAK1C,GAC1B2C,KAAI,SAACC,GAAD,OACD,cAAC,EAAD,aAEI5E,OAAQ,SAACqE,GAAD,OAAgBF,EAAgBE,IACxC1F,OAAQ,SAAC0F,GAAD,OAbM,SAACA,GACGN,EAAtBM,IAAOP,EAAgC,KACrBO,GAWUQ,CAAkBR,IAC1CjG,UAAuB,OAAb0F,QAAa,IAAbA,OAAA,EAAAA,EAAeS,cAAeK,GACpC5C,EAAO4C,IAJNA,MAKjB,OACI,cAAC1E,EAAA,EAAD,CAAM4E,WAAS,EAACvE,UAAWN,EAAQtC,KAAnC,SACK6G,K,kBCtDE,MAA0B,iCCMnCjH,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAK,aACD8F,SAAU,EACVsB,UAAW,SACXC,cAAe,KACdvH,EAAMa,YAAYC,KAAK,MAAQ,CAC5ByG,cAAe,KAGvBC,QAAS,CACL9G,OAAQ,IAEZ+G,KAAK,aACDrH,SAAU,WACVsH,SAAU,KACT1H,EAAMa,YAAYC,KAAK,MAAQ,CAC5B4G,SAAU,KAGlB5F,MAAM,aACFzB,OAAQ,QACPL,EAAMa,YAAYC,KAAK,MAAQ,CAC5B6G,SAAU,UAqBXC,EAfO,WAClB,IAAMpF,EAAU1C,IAEhB,OACI,qBAAKgD,UAAWN,EAAQtC,KAAxB,SACI,cAAC2H,EAAA,EAAD,CAAQzH,SAAS,QAAjB,SACI,eAAC0H,EAAA,EAAD,CAAShF,UAAWN,EAAQgF,QAA5B,UACI,qBAAK1E,UAAWN,EAAQiF,KAAMM,IAAKC,EAAMC,IAAI,mBAC7C,oBAAInF,UAAWN,EAAQV,MAAvB,2CCtBLoG,EAfH,WACV,IAAM1B,EAAWC,cAMjB,OAJA0B,qBAAU,WACR3B,EJeOpB,EAAYW,MIdlB,CAACS,IAGF,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,SCJA4B,GAA4B,CAC9B7D,OAAQ,GACRuB,aAAc,GACdnB,OAAO,EACPF,SAAS,GAkBP4D,GAA2B,SAAChE,EAAoBiB,GAClD,IAAMf,EAAM,eAAQe,EAAQf,QACtBuB,EAAY,eAAQR,EAAQQ,cAClC,IAAK,IAAMqB,KAAO5C,EACV4C,KAAOrB,IACPvB,EAAO4C,GAAK3G,YAAa,GASjC,OAAOyE,EAAaZ,EANC,CACjBE,OAAQA,EACRuB,aAAcA,EACdrB,SAAS,EACTE,OAAO,KAKT2D,GAAyB,SAACjE,GAI5B,OAAOY,EAAaZ,EAHC,CACjBI,SAAS,KAKX8D,GAA0B,SAAClE,GAK7B,OAAOY,EAAaZ,EAJC,CACjBI,SAAS,EACTE,OAAO,KAKT6D,GAAuB,SAACnE,EAAoBiB,GAC9C,IAAMmD,EAAY,eAAQpE,EAAME,OAAOe,EAAQsB,KAC/C6B,EAAajI,YAAciI,EAAajI,WACxC,IAAMkI,EAAgBzD,EAAaZ,EAAME,OAAP,eAC7Be,EAAQsB,GAAK6B,IAMlB,OAAOxD,EAAaZ,EAJC,CACjBE,OAAQmE,EACR5C,aAAcR,EAAQQ,gBAKfxB,GA5DO,WAA+D,IAA9DD,EAA6D,uDAArD+D,GAAcO,EAAuC,uCAChF,OAAQA,EAAOtD,MACX,KAAKU,EACD,OAAOyC,GAAqBnE,EAAOsE,EAAOrD,SAC9C,KAAKS,EACD,OAAOuC,GAAuBjE,GAClC,KAAK0B,EACD,OAAOwC,GAAwBlE,GACnC,KAAK0B,EACD,OAAOsC,GAAyBhE,EAAOsE,EAAOrD,SAClD,QACI,OAAOjB,IC1BNuE,GAAcC,aAAgB,CACvCvE,cAAeA,K,gHCgBNwE,GAAY,I,iTAfMC,KAAKC,IAAiB,U,cAAvCC,E,yBACCF,KAAKG,kBAAkBD,EAASE,KAAKC,U,8IAGvBD,GAErB,IADA,IAAME,EAA+B,GACrC,MAAkBrC,OAAOC,KAAKkC,GAA9B,eAAqC,CAAhC,IAAMhC,EAAG,KACVgC,EAAKhC,GAAK3G,YAAa,EACvB6I,EAAkBF,EAAKhC,GAAKpF,YAAcoH,EAAKhC,GAEnD,OAAOkC,M,GCbf,WAeI,aAAe,0BAdPC,SAcM,OAZNC,UAAgC,CACpCvF,QAAS,KACTwF,QAASC,wBACTC,QAAS,CACLC,OAAQ,CACJ,eAAgB,mBAChBC,OAAQ,sBAOhBb,KAAKO,IAAMO,KAAMxI,OAAO0H,KAAKQ,WAhBrC,iDAmBsCO,EAAaC,GAC3C,OAAOhB,KAAKO,IAAIN,IAAIc,EAAKC,OApBjC,O,aCIUC,I,aAYAC,IAZV,SAAUD,GAAuBrB,GAAjC,0EACgB,OADhB,SACsBuB,aAAK,CAACC,aAAc,WAAY,qBADtD,OAQI,OAPMC,EADV,QAEQC,EAFR,eAEiDC,KAAKC,MAAMH,KACzCzB,EAAOrD,gBACX+E,EAAW1B,EAAOrD,SAEzB+E,EAAW1B,EAAOrD,SAAWqD,EAAOrD,QAN5C,SAQU4E,aAAK,CAACC,aAAc,WAAY,oBAAqBG,KAAKE,UAAUH,IAR9E,OASI,OATJ,SASUI,cTZgB7D,ESYY+B,EAAOrD,QTXlCF,EAAYW,EAA8B,CAACa,KAAId,aSWJuE,MATtD,iCTHyB,IAACzD,ISG1B,IAYA,SAAUqD,KAAV,0EAEQ,OAFR,kBAEcQ,aTRHrF,EAAYW,ISMvB,OAGQ,OAHR,SAGc2E,aAAM,KAHpB,OAIuB,OAJvB,SAI6BR,cAAK,kBAAMpB,GAAU6B,eAJlD,OAKoB,OADNpG,EAJd,iBAK0B2F,aAAK,CAACC,aAAc,WAAY,qBAL1D,QAMQ,OADMC,EALd,iBAMcK,aAAI5D,EAAiCtC,EAAQ+F,KAAKC,MAAMH,KANtE,gCAQQ,OARR,oCAQcK,cTPoB9F,ESOhB,KTNPS,EAAYW,EAAiCpB,KSFxD,kCTCiC,IAACA,ISDlC,kBAYA,IAKeiG,GALD,CACVC,aAAU9E,EAA0BkE,IACpCY,aAAU9E,EAAoCiE,K,aC9BzBc,IAAV,SAAUA,KAAV,kEACX,OADW,SACLC,aAAI,aACHC,KAFI,wCCOf,IAAMC,GAA6HC,KAE7HC,GAAiBC,eAEjBC,GAAQC,aACZ1C,GACAqC,GAAiBM,aAAgBJ,MAGnCA,GAAeK,IAAIV,IAEnBW,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,U","file":"static/js/main.95b7e61a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport moment from 'moment';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { IMovie } from '../../../../types';\r\n\r\nconst favoriteBoxShadow = '0px 0px 3px 1px #f44336';\r\nconst normalBoxShadow = '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 8px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)';\r\n\r\ntype StyleProps = {\r\n    isFavorite: boolean,\r\n    expanded: boolean\r\n};\r\n\r\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\r\n    createStyles({\r\n        root: props => ({\r\n            position: 'relative',\r\n            margin: 20,\r\n            flexDirection: 'column',\r\n            boxShadow: props.isFavorite ? favoriteBoxShadow : normalBoxShadow,\r\n            transition: '0.2s all',\r\n            height: props.expanded ? 450 : 320,\r\n            '&:hover': {\r\n                transform: \"scale(1.03)\"\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                height: 'auto',\r\n                minHeight: 280\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                margin: 10,\r\n                minHeight: 320\r\n            }\r\n        }),\r\n        openingCrawl: {\r\n            padding: '0 16px'\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        actions: {\r\n            position: 'absolute',\r\n            right: 0,\r\n            bottom: 0\r\n        },\r\n        icon: {\r\n            marginLeft: 'auto'\r\n        }\r\n    }),\r\n);\r\n\r\ntype Props = {\r\n    expanded: boolean;\r\n    expand: (id: number) => void;\r\n    toggle: (id: number) => {};\r\n} & IMovie;\r\n\r\nconst MovieItem: React.FC<Props> = ({\r\n    title,\r\n    episode_id,\r\n    opening_crawl,\r\n    release_date,\r\n    isFavorite,\r\n    expanded,\r\n    characters,\r\n    planets,\r\n    vehicles,\r\n    species,\r\n    starships,\r\n    expand,\r\n    toggle }) => {\r\n\r\n    const classes = useStyles({ isFavorite, expanded });\r\n\r\n    return (\r\n        <Grid item lg={4} md={6}>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    title={title}\r\n                    subheader={moment(release_date).format('LL')}\r\n                />\r\n                <CardContent className={classes.openingCrawl}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {opening_crawl}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Tooltip title={isFavorite ? 'Remove from favorites' : 'Add to favorites'}>\r\n                        <IconButton onClick={() => toggle(episode_id)} className={classes.icon}>\r\n                            <FavoriteIcon color={isFavorite ? 'secondary' : 'disabled'} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={expanded ? 'Show less' : 'Show more'}>\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen]: expanded,\r\n                            })}\r\n                            onClick={() => expand(episode_id)}\r\n                            aria-expanded={expanded}>\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        <Typography paragraph><u>Extras</u></Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of characters: {characters.length}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of planets: {planets.length}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of species: {species.length}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of vehicles: {vehicles.length}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Number of starships: {starships.length}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MovieItem;\r\n","import { RootState } from './index';\r\n\r\nexport const selectMoviesState = (state: RootState) => state.moviesReducer.movies;\r\nexport const selectLoadingState = (state: RootState) => state.moviesReducer.loading;\r\nexport const selectErrorState = (state: RootState) => state.moviesReducer.error;\r\n\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            position: 'absolute',\r\n            left: '50%',\r\n            top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    }),\r\n);\r\n\r\n\r\n\r\nconst Spinner: React.FC = () => {\r\n    const classes = useStyles();\r\n    return <div className={classes.root}><CircularProgress size={50}/></div>\r\n};\r\n\r\nexport default Spinner;\r\n","export function updateObject<T, U>(oldState: T, updatedProperties: U): T {\r\n    return { ...oldState, ...updatedProperties };\r\n}\r\n\r\nexport function typedAction<T extends string>(type: T): { type: T };\r\n\r\nexport function typedAction<T extends string, P extends any>(\r\n    type: T,\r\n    payload: P\r\n): { type: T; payload: P };\r\n\r\nexport function typedAction(type: string, payload?: any) {\r\n    return { type, payload };\r\n}","export const TOGGLE_FAV_MOVIE = 'TOGGLE_FAV_MOVIE';\r\nexport const TOGGLE_FAV_MOVIE_START = 'TOGGLE_FAV_MOVIE_START';\r\nexport const FETCH_MOVIES_START = 'FETCH_MOVIES_START';\r\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\r\nexport const FETCH_MOVIES_FAILED = 'FETCH_MOVIES_FAILED';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';","import { IFavoriteMoviesIdsSet, IMovieSet } from '../../types';\r\nimport { typedAction } from '../../utils/util';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const toggleFav = (id: string, favoritesIds: IFavoriteMoviesIdsSet) => {\r\n    return typedAction(actionTypes.TOGGLE_FAV_MOVIE, {id, favoritesIds});\r\n};\r\n\r\nexport const toggleFavStart = (id: string) => {\r\n    return typedAction(actionTypes.TOGGLE_FAV_MOVIE_START, id);\r\n};\r\n\r\nexport const fetchMoviesStart = () => {\r\n    return typedAction(actionTypes.FETCH_MOVIES_START);\r\n};\r\n\r\nexport const fetchMoviesSuccess = (movies: IMovieSet, favoritesIds: IFavoriteMoviesIdsSet) => {\r\n    return typedAction(actionTypes.FETCH_MOVIES_SUCCESS, { movies, favoritesIds });\r\n};\r\n\r\nexport const fetchMoviesFailed = (error: string) => {\r\n    return typedAction(actionTypes.FETCH_MOVIES_FAILED, error);\r\n};\r\n\r\nexport const fetchMovies = () => {\r\n    return typedAction(actionTypes.FETCH_MOVIES);\r\n};\r\n\r\nexport type MoviesActions = ReturnType<\r\n    typeof toggleFav |\r\n    typeof fetchMoviesStart |\r\n    typeof fetchMoviesSuccess |\r\n    typeof fetchMoviesFailed |\r\n    typeof fetchMovies>;","import React, { useCallback, useState } from 'react';\r\nimport MovieItem from './components/MovieItem/MovieItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectErrorState, selectLoadingState, selectMoviesState } from '../../store/reducers/selectors';\r\nimport Spinner from '../../shared/UI/Spinner/Spinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as MoviesActions from '../../store/actions/movies';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            padding: 20,\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: 15\r\n            }\r\n        }\r\n    }),\r\n);\r\n\r\nconst MoviesList = () => {\r\n    const [movieToExpand, setMovieToExpand] = useState<number | null>(null);\r\n    const movies = useSelector(selectMoviesState);\r\n    const loading = useSelector(selectLoadingState);\r\n    const error = useSelector(selectErrorState);\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleToggleFav = useCallback((id: number) => dispatch(MoviesActions.toggleFavStart(id.toString())), [dispatch]);\r\n    const handleExpandClick = (id: number) => {\r\n        if (id === movieToExpand) setMovieToExpand(null);\r\n        else setMovieToExpand(id);\r\n    };\r\n\r\n    if (loading) return <Spinner />;\r\n    if (error) return <h2>Some error occured, please contact the site creator!</h2>;\r\n\r\n    const moviesList = Object.keys(movies)\r\n        .map((key: string) =>\r\n            <MovieItem\r\n                key={key}\r\n                toggle={(id: number) => handleToggleFav(id)}\r\n                expand={(id: number) => handleExpandClick(id)}\r\n                expanded={movieToExpand?.toString() === key ? true : false}\r\n                {...movies[key]} />);\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            {moviesList}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MoviesList;","export default __webpack_public_path__ + \"static/media/logo.de03c65a.svg\";","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Logo from '../../../assets/images/logo.svg';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            textAlign: 'center',\r\n            paddingBottom: 100,\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingBottom: 80\r\n            }\r\n        },\r\n        toolbar: {\r\n            height: 80,\r\n        },\r\n        logo: {\r\n            position: 'absolute',\r\n            maxWidth: 100,\r\n            [theme.breakpoints.down('xs')]: {\r\n                maxWidth: 65\r\n            }\r\n        },\r\n        title: {\r\n            margin: 'auto',\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: 18\r\n            }\r\n        }\r\n    }),\r\n);\r\n\r\nconst CustomToolbar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <img className={classes.logo} src={Logo} alt=\"Star Wars Logo\" />\r\n                    <h1 className={classes.title}>The Star Wars Trilogy</h1>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomToolbar;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport MoviesList from './pages/movies-page/MoviesList';\nimport CustomToolbar from './shared/UI/Toolbar/Toolbar';\nimport * as MoviesActions from './store/actions/movies';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(MoviesActions.fetchMovies());\n  }, [dispatch]);\n\n  return (\n    <>\n      <CustomToolbar />\n      <MoviesList />\n    </>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../utils/util';\r\nimport { IFavoriteMoviesIdsSet, IMovieSet } from '../../types';\r\nimport { MoviesActions } from '../actions/movies';\r\n\r\ninterface MoviesState {\r\n    movies: IMovieSet,\r\n    favoritesIds: IFavoriteMoviesIdsSet,\r\n    error: boolean,\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: MoviesState = {\r\n    movies: {},\r\n    favoritesIds: {},\r\n    error: false,\r\n    loading: false\r\n}\r\n\r\nconst moviesReducer = (state = initialState, action: MoviesActions): MoviesState => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_FAV_MOVIE:\r\n            return toggleFavMovieHelper(state, action.payload);\r\n        case actionTypes.FETCH_MOVIES_START:\r\n            return fetchMoviesStartHelper(state);\r\n        case actionTypes.FETCH_MOVIES_FAILED:\r\n            return fetchMoviesFailedHelper(state);\r\n        case actionTypes.FETCH_MOVIES_SUCCESS:\r\n            return fetchMoviesSuccessHelper(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst fetchMoviesSuccessHelper = (state: MoviesState, payload: { movies: IMovieSet, favoritesIds: IFavoriteMoviesIdsSet }): MoviesState => {\r\n    const movies = { ...payload.movies };\r\n    const favoritesIds = { ...payload.favoritesIds };\r\n    for (const key in movies) {\r\n        if (key in favoritesIds) {\r\n            movies[key].isFavorite = true;\r\n        }\r\n    }\r\n    const updatedState = {\r\n        movies: movies,\r\n        favoritesIds: favoritesIds,\r\n        loading: false,\r\n        error: false\r\n    };\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst fetchMoviesStartHelper = (state: MoviesState): MoviesState => {\r\n    const updatedState = {\r\n        loading: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst fetchMoviesFailedHelper = (state: MoviesState): MoviesState => {\r\n    const updatedState = {\r\n        loading: false,\r\n        error: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst toggleFavMovieHelper = (state: MoviesState, payload: { id: string, favoritesIds: IFavoriteMoviesIdsSet }): MoviesState => {\r\n    const updatedMovie = { ...state.movies[payload.id] };\r\n    updatedMovie.isFavorite = !updatedMovie.isFavorite;\r\n    const updatedMovies = updateObject(state.movies, {\r\n        [payload.id]: updatedMovie\r\n    });\r\n    const updatedState = {\r\n        movies: updatedMovies,\r\n        favoritesIds: payload.favoritesIds\r\n    };\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nexport default moviesReducer;","import { combineReducers } from 'redux';\r\nimport moviesReducer from './movies';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    moviesReducer: moviesReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { Api } from \"../utils/axios\";\r\nimport { ApiResponse, IMovieSet } from \"../types\";\r\n\r\nclass MoviesApi extends Api {\r\n\r\n    public async getMovies(): Promise<IMovieSet> {\r\n        const response = await this.get<ApiResponse>('/films');\r\n        return this.transformResponse(response.data.results);\r\n    }\r\n\r\n    public transformResponse(data: IMovieSet): IMovieSet {\r\n        const transformedMovies: IMovieSet = {};\r\n        for (const key of Object.keys(data)) {\r\n            data[key].isFavorite = false;\r\n            transformedMovies[data[key].episode_id] = data[key];\r\n        }\r\n        return transformedMovies;\r\n    }\r\n\r\n}\r\n\r\nexport const moviesApi = new MoviesApi();","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { ApiResponse } from \"../types\";\r\n\r\nexport class Api {\r\n    private api: AxiosInstance;\r\n\r\n    private apiConfig: AxiosRequestConfig = {\r\n        timeout: 15000,\r\n        baseURL: process.env.REACT_APP_API_URI,\r\n        headers: {\r\n            common: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\"\r\n            }\r\n        },\r\n\r\n    };\r\n\r\n    constructor() {\r\n        this.api = axios.create(this.apiConfig);\r\n    }\r\n\r\n    public get<T extends ApiResponse>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> {\r\n        return this.api.get(url, config);\r\n    }\r\n}","import { put, takeEvery, call, delay } from 'redux-saga/effects';\r\nimport * as MoviesActions from '../actions/movies';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { moviesApi } from '../../api/movies';\r\nimport { IFavoriteMoviesIdsSet } from '../../types';\r\n\r\n\r\nfunction* updateFavMoviesIdsSaga(action: ReturnType<typeof MoviesActions.toggleFavStart>) {\r\n    const ids = yield call([localStorage, 'getItem'], 'favoriteMoviesIds');\r\n    let updatedIds: IFavoriteMoviesIdsSet = { ...JSON.parse(ids) };\r\n    if (updatedIds[action.payload]) {\r\n        delete updatedIds[action.payload];\r\n    } else {\r\n        updatedIds[action.payload] = action.payload;\r\n    }\r\n    yield call([localStorage, 'setItem'], 'favoriteMoviesIds', JSON.stringify(updatedIds));\r\n    yield put(MoviesActions.toggleFav(action.payload, updatedIds));\r\n}\r\n\r\nfunction* getMoviesSaga() {\r\n    try {\r\n        yield put(MoviesActions.fetchMoviesStart());\r\n        yield delay(500);\r\n        const movies = yield call(() => moviesApi.getMovies());\r\n        const ids = yield call([localStorage, 'getItem'], 'favoriteMoviesIds');\r\n        yield put(MoviesActions.fetchMoviesSuccess(movies, JSON.parse(ids)));\r\n    } catch (err) {\r\n        yield put(MoviesActions.fetchMoviesFailed(err));\r\n    }\r\n}\r\n\r\nconst sagas = [\r\n    takeEvery(actionTypes.FETCH_MOVIES, getMoviesSaga),\r\n    takeEvery(actionTypes.TOGGLE_FAV_MOVIE_START, updateFavMoviesIdsSaga)\r\n];\r\n\r\nexport default sagas;\r\n","import MoviesSagas from './movies';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...MoviesSagas\r\n    ])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './store/sagas/index';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}